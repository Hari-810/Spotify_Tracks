file_path = r"/mnt/npdaimladlsuse2/dev2/US-000-1/APIPlatform/1cd00b2c-35cc-4739-8d24-842a01551f8b/0962ed1f-46e8-ef11-88f8-6045bd7d6213/Uploads/test.txt"

# Function to check if the file exists
def check_file_exists(path):
    try:
        files = dbutils.fs.ls(path.rsplit('/', 1)[0])  # List files in the directory
        for file in files:
            if file.name == path.split("/")[-1]:  # Check for exact filename match
                print(f" File exists: {path}")
                                
                with open(path, "r") as file:
                    content = file.read()
                print(f" {file.name}")
                return True
        print(f" File NOT found: {path}")
        return False
    except Exception as e:
        print(f"Error accessing path: {e}")
        return False

# Check file existence
check_file_exists(file_path)


file_path = r"/mnt/npdaimladlsuse2/dev2/US-000-1/APIPlatform/1cd00b2c-35cc-4739-8d24-842a01551f8b/0962ed1f-46e8-ef11-88f8-6045bd7d6213/Uploads/test.txt"

content = spark.read.text(file_path)

content.show(truncate=False)

file_path = r"/mnt/npdaimladlsuse2/dev2/US-000-1/APIPlatform/1cd00b2c-35cc-4739-8d24-842a01551f8b/0962ed1f-46e8-ef11-88f8-6045bd7d6213/Uploads/independent auditor's report 3.pdf"
# Copy from ADLS (Mounted) to DBFS Temporary Storage
dbutils.fs.cp(file_path, "dbfs:/tmp/yourfile.pdf")
from PyPDF2 import PdfReader
# Now read from DBFS
local_pdf_path = "/dbfs/tmp/yourfile.pdf"

with open(local_pdf_path, "rb") as file:
    pdf = PdfReader(file)
    text = "\n".join([page.extract_text() for page in pdf.pages if page.extract_text()])

print(text)
